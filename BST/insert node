// search and insertion operations takes place so time complexity is big O(h) where h is height of tree and in tree like linkedlist or skewed tree it is big O(n) as h is no.
// of nodes
class Solution {
    // Function to insert a node in a BST.
    Node insert(Node root, int k) {
        if(root==null) return new Node(k);
        
        if(k<root.data){
            root.left= insert(root.left, k); // going to return node to left side
        }
        if(k>root.data){
            root.right= insert(root.right, k);// going to return node to right side
        }
        return root;
    }
}
